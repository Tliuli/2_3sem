// 3_3.cpp : Этот файл содержит функцию "main". Здесь начинается и заканчивается выполнение программы.
//

#include <iostream> //для работы с потоками ввода\вывода
#include<stdlib.h> //для работы функции rand()
#include<time.h> //для работы функции time()
using namespace std;

// Считаем, что массив квадратный. Ну, так следует из задания, вроде как. Суть особо не меняется, просто иначе k появится в циклах

int main()
{
	int n, a, b, s;
	setlocale(LC_ALL, "Russian");  // чтобы русский язык при печати верно выводился
	
	cout << "Введите число: ";
	cin >> n;
	int** A = new int* [n];		// Хотим создать массив A[n][k], где n и k заранее неизвестны. По сути, создаем одномерный массив, который расширяем до двумерного
	for (int i = 0; i < n; i++) {
		A[i] = new int[n];
	}
	// Заполним массив случайными числами в из диапазона [-10; 10]

	//функция rand() нуждается в инициализации, которая производится by srand()
	srand(time(NULL)); // для добавления случайности в качестве начального числа будем брать текущее время с системного таймера
	for (int i = 0; i < n; i++) {
		for (int j = 0; j < n; j++) {
			A[i][j] = rand() % 21 - 10; // будь тут ...%(11);, то диапазон был бы [0; 10]
		}
	}

	// вывод массива
	for (int i = 0; i < n; i++) {
		for (int j = 0; j < n; j++) {
			cout << A[i][j] << " ";
		}
		cout << endl;
	}


	// Имеем две оси от 1 до N (от 0 до N - 1). User N раз указывает пару чисел в этом пределе.

	for (int q = 0; q < n; q++) {
		s = 0;
		cout << "Введите числа: ";
		cin >> a >> b;
		for (int i = 0; i < a; i++) {
			for (int j = 0; j < b; j++) {
				//cout << A[i][j] << " "; //эта строка для проверки, что вообще складываем
				s += A[i][j];
			}
			//cout << endl;
		}
		cout << s;
		cout << endl;
	}

	
}

// Запуск программы: CTRL+F5 или меню "Отладка" > "Запуск без отладки"
// Отладка программы: F5 или меню "Отладка" > "Запустить отладку"

// Советы по началу работы 
//   1. В окне обозревателя решений можно добавлять файлы и управлять ими.
//   2. В окне Team Explorer можно подключиться к системе управления версиями.
//   3. В окне "Выходные данные" можно просматривать выходные данные сборки и другие сообщения.
//   4. В окне "Список ошибок" можно просматривать ошибки.
//   5. Последовательно выберите пункты меню "Проект" > "Добавить новый элемент", чтобы создать файлы кода, или "Проект" > "Добавить существующий элемент", чтобы добавить в проект существующие файлы кода.
//   6. Чтобы снова открыть этот проект позже, выберите пункты меню "Файл" > "Открыть" > "Проект" и выберите SLN-файл.
