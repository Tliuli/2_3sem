*(5Б) Поведение: Переменных, указателей и ссылок при передаче в функцию.
При входе в функцию для переменной создается копия, с которой и производятся операции. Удаляется после выхода, оригинальная не меняется.
Указатель и ссылка же напрямую работают с переменной. Причем, ссылка - это, по сути, разыменованный указатель.

*(5Б) Как ведут себя статические переменные объявленные внутри функций.
Инициализация static переменных происходит единожды и ДО main и она существует до завершения main. Т.о. значения их меняются сразу при проведении изменений и никуда не "откатываются" при выходе из функции.

*(5Б) Аргументы функций по умолчанию.
Последним параметрам в сигнатуре функции можно назначить аргумент по умолчанию, т. е. вызывающий объект сможет опустить аргумент при вызове функции, если не требуется указать какое-либо другое значение.
Поданные аргументы по приоритету выше аргументов по умолчанию.

*(5Б) На основе чего осуществляется выбор перегруженной функции. (Не как, а на основе чего!)
Функции могут быть перегружены. Это означает, что разные версии функции могут иметь одно и то же имя, если они отличаются числом и/или типом формальных параметров

Компилятор выбирает перегруженную функцию для вызова на основе наилучшего соответствия объявлений функций в текущей области аргументам, указанным в вызове функции. Если подходящая функция найдена, эта функция вызывается. "Подходит" в этом контексте означает:
а) Точное соответствие найдено;
б) Тривиальное преобразование выполнено;
в) Восходящее приведение целого типа выполнено;
г) Стандартное преобразование в требуемый тип аргумента существует;
д) Существует определяемое пользователем преобразование (оператор преобразования или конструктор) в нужный тип аргумента;
е) Аргументы, представленные многоточием, найдены;

Компилятор создает набор функций-кандидатов для каждого аргумента. Функции-кандидаты — это функции, в которых фактический аргумент в данной позиции можно преобразовать в тип формального аргумента.

Для каждого аргумента создается набор наиболее подходящих функций, и выбранная функция представляет собой пересечение всех наборов. Если на пересечении находится несколько функций, перегрузка является неоднозначной и выдает ошибку. Функция, выбранная в конечном итоге, всегда лучше, чем любая другая функция в группе для хотя бы одного аргумента. Если явный победитель отсутствует, вызов функции создает ошибку компилятора.

*(5Б) Отличия inline функций от макросов.

Встроенные функции похожи на макросы, так как код функции разворачивается в точке вызова во время компиляции. Однако встроенные функции анализируются компилятором, а макросы расширяются препроцессором. В результате, имеется несколько важных различий.

а) Встроенные функции задаются с помощью того же синтаксиса, что и любая другая функция, за исключением того, что они включают inline ключевое слово в объявлении функции;
б) Выражения, передаваемые во встраиваемые функции в качестве аргументов, вычисляются один раз. В некоторых случаях выражения, передаваемые в макросы в качестве аргументов, можно вычислить несколько раз.

